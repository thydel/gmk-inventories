#!/usr/bin/env ansible-playbook
---

- hosts: localhost
  connection: local

  vars:

    ansible_become_pass: "{{ lookup('pipe', 'pass node/' + lookup('pipe', 'id -un') + '@' + lookup('pipe', 'hostname -s')) }}"
    repo: https://github.com/stedolan/jq.git
    versions: [ master, jq-1.6 ]
    version: '{{ versions[0] }}'
    basedir: tmp/jq
    install: /usr/local/bin/jq
    force: NIL
    deps:
      - [ autoconf, autoconf-archive, autoconf-doc, automake, autotools-dev ]
      - [ build-essential, g++, gettext, gnu-standards, libtool ]
    commands:
      - [ submodule,  git submodule update --init,           ../jq.submodule,   False ]
      - [ submodule,  touch ../jq.submodule,                 ../jq.submodule,   False ]
      - [ autoreconf, autoreconf -fi,                        Makefile.in,       False ]
      - [ configue,   ./configure --with-oniguruma=builtin,  config.log,        False ]
      - [ patch,      sed -ie '/python/s//&3/' Makefile,     ../jq.patch,       False ]
      - [ patch,      touch ../jq.patch,                     ../jq.patch,       False ]
      - [ make,       make -j8,                              jq,                False ]
      - [ install,    make install,                          '{{ force }}',     True ]

  tasks:

    - git: { repo: '{{ repo }}', version: '{{ version }}', dest: '{{ basedir }}' }
      name: get sources
      tags: git

    - apt: { name: '{{ deps | flatten }}' }
      become: True
      name: install dependencies
      tags: apt

    - with_nested: [ '{{ commands }}' ]
      loop_control: { label: '{{ item[0] }}' }
      become: '{{ item[3] }}'
      command: '{{ item[1] }}'
      args:
        chdir: '{{ basedir }}'
        creates: '{{ item[2] }}'
        warn: False
      tags: install
      name: configure compile and install jq

